name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      front_changed: ${{ steps.check-changes.outputs.front_changed }}
      back_changed: ${{ steps.check-changes.outputs.back_changed }}
    steps:
      - uses: actions/checkout@v2
      - uses: tj-actions/changed-files@v35
        id: changed-files
      - id: check-changes
        run: |
          echo "front_changed=${{ contains(steps.changed-files.outputs.all_changed_files, 'front/') }}" >> $GITHUB_OUTPUT
          echo "back_changed=${{ contains(steps.changed-files.outputs.all_changed_files, 'back/') }}" >> $GITHUB_OUTPUT

  deploy-front:
    needs: check-changes
    if: needs.check-changes.outputs.front_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Create temporary project directory on EC2
      #   uses: appleboy/ssh-action@v0.1.7
      #   with:
      #     host: ${{ secrets.FRONT_EC2_HOST }}
      #     username: ${{ secrets.EC2_USER }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     script: |
      #       sudo mkdir -p /home/ubuntu/react-chat-temp
      #       sudo chown ${{ secrets.EC2_USER }}:${{ secrets.EC2_USER }} /home/ubuntu/react-chat-temp
      
      # - name: Add SSH key
      #   run: |
      #     mkdir -p ~/.ssh
      #     echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
      #     chmod 600 ~/.ssh/id_rsa
      #     ssh-keyscan ${{ secrets.FRONT_EC2_HOST }} >> ~/.ssh/known_hosts

      # - name: Copy files via SCP to temporary directory
      #   run: |
      #     scp -r -i ~/.ssh/id_rsa * ${{ secrets.EC2_USER }}@${{ secrets.FRONT_EC2_HOST }}:/home/ubuntu/react-chat-temp

      # - name: Move files to project directory and set permissions
      #   uses: appleboy/ssh-action@v0.1.7
      #   with:
      #     host: ${{ secrets.FRONT_EC2_HOST }}
      #     username: ${{ secrets.EC2_USER }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     script: |
      #       sudo mkdir -p /home/ubuntu/react-chat
      #       sudo cp -r /home/ubuntu/react-chat-temp/* /home/ubuntu/react-chat/
      #       sudo rm -rf /home/ubuntu/react-chat-temp

      # - name: Install Docker on EC2
      #   uses: appleboy/ssh-action@v0.1.7
      #   with:
      #     host: ${{ secrets.FRONT_EC2_HOST }}
      #     username: ${{ secrets.EC2_USER }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     script: |
      #       sudo apt-get update
      #       sudo apt-get install -y \
      #         ca-certificates \
      #         curl \
      #         gnupg \
      #         lsb-release
      #       curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      #       echo \
      #         "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
      #         $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      #       sudo apt-get update
      #       sudo apt-get install -y docker-ce docker-ce-cli containerd.io
      #       sudo systemctl start docker
      #       sudo systemctl enable docker

      # - name: Install Docker Compose on EC2
      #   uses: appleboy/ssh-action@v0.1.7
      #   with:
      #     host: ${{ secrets.FRONT_EC2_HOST }}
      #     username: ${{ secrets.EC2_USER }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     script: |
      #       sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      #       sudo chmod +x /usr/local/bin/docker-compose
      #       sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
      #       sudo docker-compose --version
      
      # - name: Install Nginx and Certbot on EC2
      #   uses: appleboy/ssh-action@v0.1.7
      #   with:
      #     host: ${{ secrets.FRONT_EC2_HOST }}
      #     username: ${{ secrets.EC2_USER }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     script: |
      #       sudo apt-get update
      #       sudo apt-get install -y nginx certbot python3-certbot-nginx

      - name: Ensure Docker is running
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.FRONT_EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo systemctl status docker

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Build and push front Docker image
        run: |
          docker-compose -f docker-compose.prod.yml --env-file .env.production build front
          docker-compose -f docker-compose.prod.yml --env-file .env.production push front

      - name: Pull Docker images
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.FRONT_EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/react-chat
            sudo docker-compose -f docker-compose.prod.yml --env-file .env.production pull front

      # - name: Increase Swap Memory
      #   uses: appleboy/ssh-action@v0.1.7
      #   with:
      #     host: ${{ secrets.FRONT_EC2_HOST }}
      #     username: ${{ secrets.EC2_USER }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     script: |
      #       sudo fallocate -l 2G /swapfile
      #       sudo chmod 600 /swapfile
      #       sudo mkswap /swapfile
      #       sudo swapon /swapfile
      #       echo '/swapfile swap swap defaults 0 0' | sudo tee -a /etc/fstab

        # - name: Obtain initial SSL certificates
        #  uses: appleboy/ssh-action@v0.1.7
        #  with:
        #    host: ${{ secrets.FRONT_EC2_HOST }}
        #    username: ${{ secrets.EC2_USER }}
        #    key: ${{ secrets.EC2_SSH_KEY }}
        #    script: |
        #      cd /home/ubuntu/react-chat
        #      sudo docker-compose -f docker-compose.prod.yml --env-file .env.production down
        #      sudo certbot --nginx -d reactchat.online -d www.reactchat.online -d api.reactchat.online --non-interactive --agree-tos --email dhkdgmleh@gmail.com

      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.FRONT_EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/react-chat
            sudo docker-compose -f docker-compose.prod.yml --env-file .env.production down front
            sudo docker-compose -f docker-compose.prod.yml --env-file .env.production up -d front

      #- name: Set up cron job for certificate renewal
      #  uses: appleboy/ssh-action@v0.1.7
      #  with:
      #    host: ${{ secrets.FRONT_EC2_HOST }}
      #    username: ${{ secrets.EC2_USER }}
      #    key: ${{ secrets.EC2_SSH_KEY }}
      #    script: |
      #      echo "0 0 * * * /usr/bin/certbot renew --quiet && sudo systemctl reload nginx" | sudo tee -a /etc/crontab
  deploy-back:
    needs: check-changes
    if: needs.check-changes.outputs.back_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Ensure Docker is running
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.BACK_EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo systemctl status docker

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push back Docker image
        run: |
          docker-compose -f docker-compose.prod.yml --env-file .env.production build back
          docker-compose -f docker-compose.prod.yml --env-file .env.production push back

      - name: Pull Docker images
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.BACK_EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/react-chat
            sudo docker-compose -f docker-compose.prod.yml --env-file .env.production pull back

      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.BACK_EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/react-chat
            sudo docker-compose -f docker-compose.prod.yml --env-file .env.production stop back
            sudo docker-compose -f docker-compose.prod.yml --env-file .env.production rm -f back
            sudo docker-compose -f docker-compose.prod.yml --env-file .env.production up -d --no-deps back  



